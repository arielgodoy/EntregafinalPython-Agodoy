"""
Django settings for AppDocs project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$68j*l4_2(e8-p$)e@r!l#y^si%k8s@1nj9p@@t8zss2!9i#mb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# settings.py

ALLOWED_HOSTS = ['*']  # Agrega aquí las direcciones IP o nombres de host permitidos



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'biblioteca',
    'acounts',
    'chat',
    'ckeditor',
    'django.contrib.humanize',
    'crispy_forms',
     "crispy_bootstrap5",
     'rest_framework',
     'api',
     'access_control'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AppDocs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #'DIRS': [os.path.join(BASE_DIR, 'biblioteca', 'templates')],        
        'DIRS': [os.path.join(BASE_DIR,'templates')],        
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #global_conext para mostra nombre de la empresa activa
                'access_control.context_processors.global_context',
                'access_control.context_processors.empresas_disponibles',
            ],
        },
    },
]

WSGI_APPLICATION = 'AppDocs.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'eltit_gestion00': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'eltit_gestion00',
        'USER': 'root',
        'PASSWORD': '123',
        'HOST': 'localhost',
        'PORT': '3306',
    },    
    'eltit_gestion01': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'eltit_gestion01',
        'USER': 'root',
        'PASSWORD': '123',
        'HOST': 'localhost',
        'PORT': '3306',
    },
    'eltit_gestion08': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'eltit_gestion08',
        'USER': 'root',
        'PASSWORD': '123',
        'HOST': 'localhost',
        'PORT': '3306',
    },
}

DATABASE_ROUTERS = ['api.Router_Databases.MultiDatabaseRouter']




# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True




STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # Sin barra inicial
]



# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



LOGIN_URL = '/acounts/login/'  # URL a la vista de login
LOGIN_REDIRECT_URL = '/'  # URL a la que se redirigirá al usuario después de un login exitoso


MEDIA_URL ='/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

#AUTH_USER_MODEL = 'biblioteca.Users'
#AUTH_USER_MODEL = 'biblioteca.Users'  # Reemplaza 'myapp' con el nombre de tu aplicación donde se encuentra el modelo CustomUser


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

#CKEDITOR_UPLOAD_PATH = 'uploads/'
#CKEDITOR_JQUERY_URL = 'https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js'


CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"


CRISPY_TEMPLATE_PACK = 'bootstrap5'


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}


# ... other settings ...

CONFIGURACIONES = {
    'CLIENTE_SISTEMA': 'eltit_',  # Example value
    'APLICACION': 'My Application',  # Example value
    # Add more configurations as needed
}